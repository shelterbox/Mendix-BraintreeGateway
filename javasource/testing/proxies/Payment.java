// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testing.proxies;

public class Payment
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject paymentMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Testing.Payment";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Amount("Amount"),
		BraintreeTransactionID("BraintreeTransactionID"),
		Payment_Person("Testing.Payment_Person");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Payment(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Testing.Payment"));
	}

	protected Payment(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject paymentMendixObject)
	{
		if (paymentMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Testing.Payment", paymentMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Testing.Payment");

		this.paymentMendixObject = paymentMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Payment.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static testing.proxies.Payment initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testing.proxies.Payment.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static testing.proxies.Payment initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testing.proxies.Payment(context, mendixObject);
	}

	public static testing.proxies.Payment load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testing.proxies.Payment.initialize(context, mendixObject);
	}

	public static java.util.List<testing.proxies.Payment> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<testing.proxies.Payment> result = new java.util.ArrayList<testing.proxies.Payment>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Testing.Payment" + xpathConstraint))
			result.add(testing.proxies.Payment.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Amount
	 */
	public final java.math.BigDecimal getAmount()
	{
		return getAmount(getContext());
	}

	/**
	 * @param context
	 * @return value of Amount
	 */
	public final java.math.BigDecimal getAmount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.Amount.toString());
	}

	/**
	 * Set value of Amount
	 * @param amount
	 */
	public final void setAmount(java.math.BigDecimal amount)
	{
		setAmount(getContext(), amount);
	}

	/**
	 * Set value of Amount
	 * @param context
	 * @param amount
	 */
	public final void setAmount(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal amount)
	{
		getMendixObject().setValue(context, MemberNames.Amount.toString(), amount);
	}

	/**
	 * @return value of BraintreeTransactionID
	 */
	public final java.lang.String getBraintreeTransactionID()
	{
		return getBraintreeTransactionID(getContext());
	}

	/**
	 * @param context
	 * @return value of BraintreeTransactionID
	 */
	public final java.lang.String getBraintreeTransactionID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.BraintreeTransactionID.toString());
	}

	/**
	 * Set value of BraintreeTransactionID
	 * @param braintreetransactionid
	 */
	public final void setBraintreeTransactionID(java.lang.String braintreetransactionid)
	{
		setBraintreeTransactionID(getContext(), braintreetransactionid);
	}

	/**
	 * Set value of BraintreeTransactionID
	 * @param context
	 * @param braintreetransactionid
	 */
	public final void setBraintreeTransactionID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String braintreetransactionid)
	{
		getMendixObject().setValue(context, MemberNames.BraintreeTransactionID.toString(), braintreetransactionid);
	}

	/**
	 * @return value of Payment_Person
	 */
	public final testing.proxies.Person getPayment_Person() throws com.mendix.core.CoreException
	{
		return getPayment_Person(getContext());
	}

	/**
	 * @param context
	 * @return value of Payment_Person
	 */
	public final testing.proxies.Person getPayment_Person(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testing.proxies.Person result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Payment_Person.toString());
		if (identifier != null)
			result = testing.proxies.Person.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Payment_Person
	 * @param payment_person
	 */
	public final void setPayment_Person(testing.proxies.Person payment_person)
	{
		setPayment_Person(getContext(), payment_person);
	}

	/**
	 * Set value of Payment_Person
	 * @param context
	 * @param payment_person
	 */
	public final void setPayment_Person(com.mendix.systemwideinterfaces.core.IContext context, testing.proxies.Person payment_person)
	{
		if (payment_person == null)
			getMendixObject().setValue(context, MemberNames.Payment_Person.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Payment_Person.toString(), payment_person.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return paymentMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testing.proxies.Payment that = (testing.proxies.Payment) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Testing.Payment";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
