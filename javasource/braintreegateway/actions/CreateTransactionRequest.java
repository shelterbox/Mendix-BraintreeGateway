// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package braintreegateway.actions;

import com.braintreegateway.Result;
import com.braintreegateway.Transaction;
import com.braintreegateway.TransactionRequest;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import braintreegateway.actions.tools.Payment;

/**
 * Will return transaction JSON.
 * 
 * Use the 'BraintreeGateway.ImportMapping_Transaction' to import as Mendix objects.
 * 
 * More on the structure here:
 * https://developer.paypal.com/braintree/docs/reference/response/transaction
 */
public class CreateTransactionRequest extends CustomJavaAction<java.lang.String>
{
	private java.math.BigDecimal Amount;
	private java.lang.String Nonce;
	private java.lang.String DeviceData;
	private java.lang.Boolean SubmitForSettlement;
	private java.lang.String FirstName;
	private java.lang.String LastName;
	private java.lang.String CountryCodeAlpha2;
	private java.lang.String CountryCodeAlpha3;
	private java.lang.String CountryName;
	private java.lang.String StreetAddress;
	private java.lang.String PostalCode;

	public CreateTransactionRequest(IContext context, java.math.BigDecimal Amount, java.lang.String Nonce, java.lang.String DeviceData, java.lang.Boolean SubmitForSettlement, java.lang.String FirstName, java.lang.String LastName, java.lang.String CountryCodeAlpha2, java.lang.String CountryCodeAlpha3, java.lang.String CountryName, java.lang.String StreetAddress, java.lang.String PostalCode)
	{
		super(context);
		this.Amount = Amount;
		this.Nonce = Nonce;
		this.DeviceData = DeviceData;
		this.SubmitForSettlement = SubmitForSettlement;
		this.FirstName = FirstName;
		this.LastName = LastName;
		this.CountryCodeAlpha2 = CountryCodeAlpha2;
		this.CountryCodeAlpha3 = CountryCodeAlpha3;
		this.CountryName = CountryName;
		this.StreetAddress = StreetAddress;
		this.PostalCode = PostalCode;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		//	Create transaction request	
		TransactionRequest request = new TransactionRequest()
				.amount(this.Amount)
				.paymentMethodNonce(this.Nonce)
				.deviceData(this.DeviceData)
				.billingAddress()
					.firstName(this.FirstName)
					.lastName(this.LastName)
					.countryCodeAlpha2(this.CountryCodeAlpha2)
					.countryCodeAlpha3(this.CountryCodeAlpha3)
					.countryName(this.CountryName)
					.streetAddress(this.StreetAddress)
					.postalCode(this.PostalCode)
					.done()
				.options()
					.submitForSettlement(this.SubmitForSettlement)
					.done();
		
		Result<Transaction> result = Payment.gateway.transaction().sale(request);
		
		//	Throw error if the transaction was unsuccessful	
		if (!result.isSuccess()) throw new Exception("Payment unsuccessful: " + result.getMessage());
		
		//	Return value as transaction JSON	
		ObjectMapper mapper = new ObjectMapper();
		return mapper.writeValueAsString(result.getTarget());
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "CreateTransactionRequest";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
